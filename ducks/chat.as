//Title: Rubber Duck Chat Client - chat.swf//Author: SandCP <http://github.com/sandcp>//License: MIT_global.serverURL = "../DChat.php"_global.player_list = [];_global.mymessage = ""_global.dropped = false;_global.logzone = 10;_global.water_mark = "Sand's Character Chat Engine"bubble = _root.createEmptyMovieClip("bubble",getNextHighestDepth());shadow = _root.createEmptyMovieClip("shadow",getNextHighestDepth());world = _root.createEmptyMovieClip("world",getNextHighestDepth());room = _root.createEmptyMovieClip("room",getNextHighestDepth());foreground = _root.createEmptyMovieClip("foreground",getNextHighestDepth());artwork = _root.createEmptyMovieClip("artwork",getNextHighestDepth());room._alpha = 0;foreground._alpha = 0;loadMovie("artwork.swf","_root.artwork");loadMovie("background.swf","_root.room");loadMovie("foreground.swf","_root.foreground");_global.trag = function(){	_root.loadMovie(_root._url);}_global.marker_load = function(){	if(marker === undefined){		marker = _root.createTextField("marker", _root.getNextHighestDepth(), 0, 460, 640, 20.30);		marker.autoSize = "center"		var marker_format = new TextFormat();		marker_format.color = 0xFFFFFF;		marker_format.font = "Arial"		marker.text = _global.water_mark;		marker.setTextFormat(marker_format);		marker._alpha = 100;	} else {		if(_global.yourname === undefined || _global.yourname === false || _global.dropped){			marker.swapDepths(_root.getNextHighestDepth());		}	}}unloadMovie(_root.bdrop);unloadMovie(_root.spinner_load);function upperCase(str) { var firstChar = str.substr(0, 1);  var restOfString = str.substr(1, str.length);      return firstChar.toUpperCase()+restOfString.toLowerCase(); }function alphaNumeric(s){	ret = "";    allowedChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890 ?!"	for(i=0;i<s.length;i++){		if(allowedChars.indexOf(s.charAt(i)) >= 0){			ret = ret+s.charAt(i);		}	}	return ret}_global.alphaNumeric = function(s){alphaNumeric(s)};_global.padNumbers = function(localx,localy){	if (localx < 10){localx = "00" + int(localx);}	else if (localx < 100){localx = "0" + int(localx);}	if (localy < 10){localy = "00" + int(localy);}	else if (localy < 100){localy = "0" + int(localy);}	return localx+"|"+localy}_global.sendPacket = function(action){	network = new LoadVars;	if(action === undefined){		network.action = 'update';	} else {		network.action = action	}	if(_global.moderator === true){		network.name = "-"+_global.yourname;	} else {		network.name = _global.yourname;	}	yourdata = padNumbers(_global.myduck[1]._x,_global.myduck[1]._y)+"|"+_global.mymessage;	set("network."+_global.yourname,yourdata);	network.sendAndLoad(serverURL,network,"POST")	network.onData = function(data){		_global.analysePacket(data);	}	if(action === undefined && _global.dropped === false){		setTimeout(_global.sendPacket,2000);	}}contains = function (input, arrayData) {	for (i=0; i<arrayData.length; i++) {		if (arrayData[i] == input) {			return 1;		}	}	return -1;};_global.analysePacket = function(data){	eachVar = data.split("&")	for(Var in eachVar){		varData = eachVar[Var].split("=");		set(varData[0],varData[1]);		if(varData[0] === "ducks"){			players = varData[1]		}	}	if(players){		players = players.split(":")		for(player in players){			if(contains(players[player],_global.player_list)===-1){				_global.player_list.push(players[player]);			}		}		for(setplayer in _global.player_list){			if(contains(_global.player_list[setplayer],players)===-1){				moveLogsUp(_global.player_list[setplayer]+" has left the pool");				unloadMovie(get("_root.world."+_global.player_list[setplayer]));				unloadMovie(get("_root.shadow."+_global.player_list[setplayer]));				delete _global.player_list[setplayer]			}		}	}	for(Var in eachVar){		if(int(Var) !== 0){			uservar = eachVar[Var].split("=");			udata = uservar[1].split("|")			if(!get("_root.world."+uservar[0]) && uservar[0] !== ""){				if(uservar[0].substr(0,1) === "-"){					trace(uservar[0]+" was seen")					actionDuck(uservar[0],int(udata[0]),int(udata[1]),udata[3],false,true);				} else {					actionDuck(uservar[0],int(udata[0]),int(udata[1]),udata[3],false);				}			}			if(get("_root.world."+uservar[0])){				iduck = get("_root.world."+uservar[0]);				if(iduck.mcchar){					char = iduck.mcchar					shad = get("_root.shadow."+uservar[0]);					bubb = get("_root.bubble."+uservar[0]);					actionMove(uservar[0],char,shad,int(udata[0]),int(udata[1]))					actionChat(udata[2],bubb);				}			}					}	}}_global.login = function(uname){	room._alpha = 100;	foreground._alpha = 100	_root.spinner._alpha = 100;	_root.spinner.swapDepths(getNextHighestDepth());	artwork.play();	_global.yourname = upperCase(alphaNumeric(uname));	_root.localx = 168+random(381.95);	_root.localy = 122+random(266);	network = new LoadVars;	network.action = "newplayer"	if(uname.substr(0,1) === "-"){		_global.moderator = true		network.name = "-"+_global.yourname;	} else {		network.name = _global.yourname;	}	set("network."+yourname,(padNumbers(localx,localy)+""));	network.sendAndLoad(serverURL,network)	network.onData = function(data){		if(data.substr(0,5) === "ducks" && data !== undefined){			if(network.name.substr(0,1) === "-"){				_global.myduck = actionDuck(yourname,_root.localx,_root.localy,_root.localm,true,true);			} else {				_global.myduck = actionDuck(yourname,_root.localx,_root.localy,_root.localm,true);			}			initiate(data);		} else {			_root.spinner._alpha = 0;			artwork.gotoAndStop(5);			artwork.fail_txt.text = "The name you have requested is unavailable\nPlease try another name."		}	}	_global.initiate = function(data){		_root.onEnterFrame = function(){			if(_global.myduck[1].getBytesLoaded() > 0 && _global.myduck[1].getBytesLoaded() >= _global.myduck[1].getBytesTotal()){				_global.sendPacket();				room.block.onRelease = function(){}				room.block._alpha = 0;				room.block.useHandCursor = false;				room.background.useHandCursor = false;				_root.onEnterFrame = function(){					_root.artwork.gotoAndStop(4);					unloadMovie(_root.spinner);					shadow.swapDepths(_root.getNextHighestDepth());					world.swapDepths(_root.getNextHighestDepth());					room.background.swapDepths(_root.getNextHighestDepth());					foreground.swapDepths(_root.getNextHighestDepth());					room.block.swapDepths(_root.getNextHighestDepth());					bubble.swapDepths(_root.getNextHighestDepth());					artwork.swapDepths(_root.getNextHighestDepth());				}				room.background.onRelease = function(){					actionMove(_global.yourname,_global.myduck[1],_global.myduck[2],_root._xmouse,_root._ymouse);				}			} else {				setTimeout(initiate,100,data);			}		}	}}_root.burstBubble = function(bubbleClip){	_global.mymessage = ""	bubbleClip.gotoAndStop(1);}function moveLogsUp(message){	if(message !== undefined){		_global.log1 = _global.log2		_global.log2 = _global.log3		_global.log3 = _global.log4		_global.log4 = _global.log5		_global.log5 = _global.log6		_global.log6 = _global.log7		_global.log7 = message	}}function getRandom(max){	unit = 1	while(max < unit){		unit*10	}	choice = int(Math.random()*10)	while(choice > max){		choice = int(Math.random()*10)	}	return(choice);}_root.actionChat = function(data,server_duck){	if(alphaNumeric(data) !== ""){		if(server_duck === undefined){			duck = _global.myduck[3]			if(data.substr(0,1) !== '/'){				_global.mymessage = alphaNumeric(data)			} else {				_global.mymessage = data			}		} else {			duck = server_duck		}		if(data.substr(0,1) !== '/'){			moveLogsUp((duck+"").split(".")[2]+": "+data)			clearTimeout(_global.joke_timeout);			if(data.length < 20){				duck.bubble.gotoAndStop(2)				duck.bubble.chat_txt._y = -3				duck.bubble.chat._height = 25;				duck.bubble.chat._y = 7;			} else if(data.length < 38) {				duck.bubble.gotoAndStop(2)				duck.bubble.chat_txt._height = 100;				duck.bubble.chat_txt._y = -20;				duck.bubble.chat._height = 48.85;				duck.bubble.chat._y = -4.5;			} else {				return false;			}			duck.bubble.chat_txt.text = upperCase(alphaNumeric(data));		} else {			if(data.substr(0,2) === '/e'){				duck.bubble.gotoAndStop(3)				duck.bubble.emote.gotoAndStop(int(data.substr(2)));			} else if(data.substr(0,2) === '/j'){				jokeque = ["Who stole the soap?","What did the duck say to the banker?","What has webbed feet and fangs?","What do ducks get after they eat?","Where do ducks go when their sick?","Where do school ducks put their books"];				jokeans = ["The Robber Ducky","My bill is bigger than yours.","Count Duckula","A bill","To the Ducktor","In their quackpack"];				rand = getRandom(jokeque.length-1);				actionChat(jokeque[rand],server_duck);				_global.joke_timeout = setTimeout(actionChat,4100,jokeans[rand],server_duck);			} else if(data.substr(0,2) === '/d'){				get((duck+"").substr(0,-6)+"mcchar").character.gotoAndPlay(1);			}					}		clearTimeout(_global.bubbleTimeout);		_global.bubbleTimeout = setTimeout(_root.burstBubble,4000,duck.bubble);	}}_root.actionDrop = function(data){	_global.sendPacket("drop");	_root.artwork.gotoAndStop(5);	_global.dropped = true;	_global.yourname = false;	_root.onEnterFrame = function(){}	_root.artwork.swapDepths(_root.getNextHighestDepth());}_root.updateDirection = function(data){	actionChat("/d");	_global.myduck[1].character.gotoAndPlay(1);}function actionDuck(duckname,dx,dy,dm,client,mod){	if(mod === true){		char_file = "character2.swf";	} else {		mod = false;		char_file = "character.swf";	}	trace("Adding new Duck "+duckname);	moveLogsUp(duckname+" has joined the pool");	newshadow = _root.shadow.createEmptyMovieClip(duckname,_root.shadow.getNextHighestDepth());	newshadow._alpha = 0;	loadMovie("shadow.swf","_root.shadow."+duckname);	yourchar = _root.world.createEmptyMovieClip(duckname,world.getNextHighestDepth());	newring = yourchar.createEmptyMovieClip("mcring",yourchar.getNextHighestDepth());	newduck = yourchar.createEmptyMovieClip("mcchar",yourchar.getNextHighestDepth());	newbubb = _root.bubble.createEmptyMovieClip(duckname,bubble.getNextHighestDepth());	loadMovie(char_file,"_root.world."+duckname+".mcchar");	loadMovie("ring_target.swf","_root.world."+duckname+".mcring")	loadMovie("bubble.swf","_root.bubble."+duckname)	loadChecker = _root.createEmptyMovieClip("loadCheck",_root.getNextHighestDepth());	loadChecker.onEnterFrame = function(){		clips = [newduck,newshadow,newring,newbubb];		clip_count = 0;		for(c in clips){			_c = clips[c]			if(_c.getBytesLoaded() > 0 && _c.getBytesLoaded() >= _c.getBytesTotal()){				clip_count++;			}		}		if(clip_count === clips.length){			_global.ducks_living = true;			alignDuck(newduck,newshadow,newring,newbubb,mod)			delete loadChecker.onEnterFrame		}	}	newduck._alpha = 0;	newbubb._alpha = 0;	if(!client){		newring._alpha = 0;	}		newduck._x = 168+random(381.95);	newduck._y = 122+random(266);	function alignDuck(newduck,newshadow,newring,newbubb,mod){		newduck._alpha = 100;		newshadow._alpha = 100;		newbubb._alpha = 100;		newduck.character.gotoAndStop(2);		newshadow.character.gotoAndStop(2);		newduck.createTextField("name",getNextHighestDepth(),-102,20,200,16);		newduck.name.autoSize = "center"		newduck.name.selectable = false;		if(mod){			newduck.name.textColor = 0x009900;		}		newduck.name.text = upperCase(alphaNumeric(duckname));		var name_format = new TextFormat();		name_format.font = "Arial";		newduck.name.setTextFormat(name_format);		newduck._x = dx;		newduck._y = dy;		newduck.character._width = 39;		newduck.character._height = 34;		newring._width = 35;		newduck.onEnterFrame = function(){			speed=5			goto=Math.atan2(get(duckname+"gety")-newduck._y,get(duckname+"getx")-newduck._x)*360/Math.PI			if(Math.abs(newduck._y-get(duckname+"gety"))+Math.abs(newduck._x-get(duckname+"getx"))>5){				newduck._x+=Math.cos(goto*Math.PI/360)*speed				newduck._y+=Math.sin(goto*Math.PI/360)*speed			}			get("_root.shadow."+duckname)._x = newduck._x;			get("_root.shadow."+duckname)._y = newduck._y+52;			newring._x = newduck._x-2;			newring._y = newduck._y+8;			newbubb._x = newduck._x-7;			newbubb._y = newduck._y-49;		}	}	actionChat("",yourchar);	newbubb.bubble.stop();	return [yourchar,newduck,newshadow,newbubb];}function actionMove(dnam,ducks,shadows,newx,newy){	set(dnam+"getx",newx);	set(dnam+"gety",newy);    valueX = (newx - ducks._x) / 2;	valueY = (newy - ducks._y) / 2;	angle = (Math.atan2(valueY, valueX) / Math.PI) * 180;   	if (0 < angle) {    	if (angle < 22.5) {    		localDirection = 7;    	} else if (angle < 67.5) {    		localDirection = 8;    	} else if (angle < 112.5) {    		localDirection = 1;    	} else if (angle < 157.5) {    		localDirection = 2;    	} else {    		localDirection = 3;    	}    } else if (-22.5 < angle) {    	localDirection = 7;    } else if (-67.5 < angle) {    	localDirection = 6;    } else if (-112.5 < angle) {    	localDirection = 5;    } else if (-157.5 < angle) {    	localDirection = 4;    } else {    	localDirection = 3;    }	ducks.character.gotoAndStop(localDirection);	shadows.character.gotoAndStop(localDirection);}